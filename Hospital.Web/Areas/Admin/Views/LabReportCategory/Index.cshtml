@using Hospital.Utility
@model PageResult<Hospital.ViewModel.LabReportCategoryViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                ID
            </th>
            <th scope="col" class="sort" onclick="sortTable(1)">
                Name
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.Data)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td class="text-nowrap">
                    <a class="btn btn-success text-white" href="@Url.Action("Edit", "LabReportCategory", new { id = item.Id })">
                        <i class="fa fa-pencil-square-o"></i>&nbsp;Edit
                    </a>  &nbsp;&nbsp;
                    <a class="btn btn-danger  text-white" href="@Url.Action("Delete", "LabReportCategory", new { id = item.Id })">
                        <i class="fa fa-pencil-square-o"></i>&nbsp;Delete
                    </a>  &nbsp;&nbsp;

                </td>

            </tr>
        }
    </tbody>
</table>
<cs-pager cs-paging-pagesize=(int)Model.PageSize
          cs-paging-pagenumber=(int)Model.PageNumber
          cs-paging-totalitems=(int)Model.TotalItems
          cs-pagenumber-param="pageNumber"
          asp-controller="LabReportCategory"
          asp-action="Index"
          cs-pager-li-current-class="page-item active"
          cs-pager-li-other-class="page-item"
          cs-pager-li-non-active-class="page-item disabled"
          cs-pager-link-current-class="page-link"
          cs-pager-link-other-class="page-link">
</cs-pager>